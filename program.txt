4-using System;
using System.Collections.Generic;
using System.Linq;

class Program
{
    static void Main()
    {
        int[] numbers = { 1, 2, 2, 3, 3, 3, 4, 4, 4, 4 };

        var frequencyMap = numbers
            .GroupBy(n => n)
            .ToDictionary(g => g.Key, g => g.Count());

        foreach (var kvp in frequencyMap)
        {
            Console.WriteLine($"Element: {kvp.Key}, Frequency: {kvp.Value}");
        }
    }
}

3-using System;
using System.Collections.Generic;
using System.Linq;

class Program
{
    static void Main()
    {
        string input = "aabbcdeeffgh";
        var charCount = input.GroupBy(c => c)
                             .ToDictionary(g => g.Key, g => g.Count());

        Console.WriteLine("Non-repeating characters:");
        foreach (var kvp in charCount)
        {
            if (kvp.Value == 1)
            {
                Console.WriteLine(kvp.Key);
            }
        }
    }
}

2-using System;
using System.Collections.Generic;

public class Solution {
    public int LengthOfLongestSubstring(string s) {
        int n = s.Length;
        HashSet<char> set = new HashSet<char>();
        int ans = 0, i = 0, j = 0;

        while (i < n && j < n) {
            if (!set.Contains(s[j])) {
                set.Add(s[j++]);
                ans = Math.Max(ans, j - i);
            } else {
                set.Remove(s[i++]);
            }
        }
        return ans;
    }
}

class Program {
    static void Main() {
        Solution sol = new Solution();
        Console.WriteLine(sol.LengthOfLongestSubstring("abcabcbb")); 
        Console.WriteLine(sol.LengthOfLongestSubstring("bbbbb"));    
        Console.WriteLine(sol.LengthOfLongestSubstring("pwwkew"));   
    }
}
1-using System;
using System.Linq;

public class Program
{
    public static void Main()
    {
        int[] input = { 10, 8, 15, 12, 6, 20, 1 };
        int[] output = RankTransform(input);
        
        Console.WriteLine("Input:  { " + string.Join(", ", input) + " }");
        Console.WriteLine("Output: { " + string.Join(", ", output) + " }");
    }
    
    public static int[] RankTransform(int[] arr)
    {
        var sortedArr = arr.OrderBy(x => x).Distinct().ToArray();
        var ranks = sortedArr.Select((x, i) => new { Value = x, Rank = i + 1 }).ToDictionary(x => x.Value, x => x.Rank);
        return arr.Select(x => ranks[x]).ToArray();
    }
}


